#-----------------------------------------------------------------------------
# global
#-----------------------------------------------------------------------------

global
    stats socket /var/lib/haproxy/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
    log stdout format raw local0 info

#-----------------------------------------------------------------------------
# defaults
#-----------------------------------------------------------------------------

defaults
    mode http
    timeout client 10s
    timeout connect 5s
    timeout server 10s
    timeout http-request 10s

    # logs of requests
    #log global
    #log-format "src=%ci frontend=%ft backend=%b/%s status=%ST retries=%rc time=%Tt size=%B sni=%[ssl_fc_sni] sslv=%sslv sslc=%sslc request=\"%r\" uhdr=\"%hr\""
    #error-log-format "src=%ci frontend=%ft backend=%b/%s status=%ST retries=%rc time=%Tt size=%B sni=%[ssl_fc_sni] sslv=%sslv sslc=%sslc fc_err=\"%[fc_err_str]\>

#-----------------------------------------------------------------------------
# https frontend
#-----------------------------------------------------------------------------

frontend http-in
    bind :80

    # Define hosts for sae23
    acl is-sae23-site hdr(host) -i web.g1.local
    acl is-static path_beg /static/ /static

    # Redirect to index
    acl is_root path -i / 
    redirect code 301 location http://web.g1.local/G7App/index/ if is-sae23-site is_root

    # Figure out which backend to use for sae23
    use_backend static if is-static is-sae23-site 
    use_backend web if is-sae23-site ! is-static

    # capture traffic
    #http-request capture req.hdr(Via) len 48
    #http-request capture req.hdr(Origin) len 48
    #http-request capture req.fhdr(Referer) len 48
    #http-request capture req.fhdr(User-Agent) len 256

#-----------------------------------------------------------------------------
# ct101 backend - sae23
#-----------------------------------------------------------------------------

backend web
    mode   http
    server web django:8000 check

backend static
    mode   http
    server static nginx:8080 check
